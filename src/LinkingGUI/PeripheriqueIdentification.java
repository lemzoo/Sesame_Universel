/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LinkingGUI;

import AccesGUI.*;
import HomeGUI.*;
import SesameApp.*;
import SharingGUI.*;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author LamineBA
 */
public class PeripheriqueIdentification extends javax.swing.JFrame implements java.io.Serializable{

    private String type_de_bien; // Maison, Appartement, Entreprise, Magasin, Entrepot, Parking
    private String type_appartenance; // Proprietaire, Locataire, Administrateur, Superviseur.
    private String emplacement; // Sous-sol, Rez de chaussee, 1er etage, 2em etage, 3em etage.
    private String type_porte; // Entree principale, Porte garage, Entree zone confidentiele
    private String commentaire_porte; // Porte de ma residence principale
    private String numero_voie_saisi;
    private String nom_voie_saisi;
    private String code_postale_saisi;
    private String ville_saisi;
    private String pays_saisi;
    /**
     * Creates new form ThirdWindows
     */
    public PeripheriqueIdentification() {
        initComponents();
        
        // Ajouter la liste pour les types de bien
        this.lister_Type_Bien();
        // Ajouter la liste pour les types d'appartenance
        this.lister_Type_Appartenance();
        // Ajouter la liste pour les emplacements possibles
        this.lister_Type_Emplacement();
        // Ajouter la liste pour les types de portes possibles
        this.lister_Type_Porte();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        decliner_jbutton = new javax.swing.JToggleButton();
        accepter_jbutton = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        code_postale_jformattedtext = new javax.swing.JFormattedTextField();
        numero_voie_jformattedtext = new javax.swing.JFormattedTextField();
        nom_voie_jformattedtext = new javax.swing.JTextField();
        ville_jformattedtext = new javax.swing.JTextField();
        pays_jformattedtext = new javax.swing.JTextField();
        commentaire_jTextField = new javax.swing.JTextField();
        choice_type_bien = new java.awt.Choice();
        choice_type_appartenance = new java.awt.Choice();
        choice_emplacement = new java.awt.Choice();
        choice_type_porte = new java.awt.Choice();
        jPanel4 = new javax.swing.JPanel();
        quitter_jbutton = new javax.swing.JToggleButton();
        continuer_jbutton = new javax.swing.JToggleButton();

        decliner_jbutton.setBackground(new java.awt.Color(255, 0, 0));
        decliner_jbutton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        decliner_jbutton.setText("Decliner");
        decliner_jbutton.setSize(new java.awt.Dimension(140, 30));
        decliner_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decliner_jbuttonActionPerformed(evt);
            }
        });

        accepter_jbutton.setBackground(new java.awt.Color(0, 255, 51));
        accepter_jbutton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        accepter_jbutton.setText("Accepter");
        accepter_jbutton.setSize(new java.awt.Dimension(140, 30));
        accepter_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accepter_jbuttonActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Identification du Periphérique");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Enregistrement des informations du périphérique");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(51, 0, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 397, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Type de bien : ");

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("Type d'appartenance : ");

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel4.setText("Son emplacement : ");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel5.setText("Type de porte : ");

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel6.setText("Commentaire sur le périphérique");

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel7.setText("Adresse de localisation du périphérique");

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel8.setText("N° de la voie :  ");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel9.setText("Nom de la voie :  ");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel10.setText("Code Postale : ");

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel11.setText("Ville : ");

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel12.setText("Pays : ");

        code_postale_jformattedtext.setBackground(new java.awt.Color(153, 153, 255));
        code_postale_jformattedtext.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("00000"))));
        code_postale_jformattedtext.setText("94400");
        code_postale_jformattedtext.setFont(new java.awt.Font("Times", 0, 14)); // NOI18N
        code_postale_jformattedtext.setSize(new java.awt.Dimension(100, 30));
        code_postale_jformattedtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                code_postale_jformattedtextActionPerformed(evt);
            }
        });

        numero_voie_jformattedtext.setBackground(new java.awt.Color(153, 153, 255));
        numero_voie_jformattedtext.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat(""))));
        numero_voie_jformattedtext.setText("13");
        numero_voie_jformattedtext.setFont(new java.awt.Font("Times", 0, 14)); // NOI18N
        numero_voie_jformattedtext.setSize(new java.awt.Dimension(100, 30));

        nom_voie_jformattedtext.setBackground(new java.awt.Color(153, 153, 255));
        nom_voie_jformattedtext.setFont(new java.awt.Font("Times", 0, 14)); // NOI18N
        nom_voie_jformattedtext.setText("Avenue Maximilien Robespierre");

        ville_jformattedtext.setBackground(new java.awt.Color(153, 153, 255));
        ville_jformattedtext.setFont(new java.awt.Font("Times", 0, 14)); // NOI18N
        ville_jformattedtext.setText("Vitry sur Seine");

        pays_jformattedtext.setBackground(new java.awt.Color(153, 153, 255));
        pays_jformattedtext.setFont(new java.awt.Font("Times", 0, 14)); // NOI18N
        pays_jformattedtext.setText("France");
        pays_jformattedtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pays_jformattedtextActionPerformed(evt);
            }
        });

        commentaire_jTextField.setBackground(new java.awt.Color(153, 153, 255));
        commentaire_jTextField.setFont(new java.awt.Font("Times", 0, 14)); // NOI18N
        commentaire_jTextField.setText("Porte de ma residence principale");

        choice_type_bien.setBackground(new java.awt.Color(153, 153, 255));

        choice_type_appartenance.setBackground(new java.awt.Color(153, 153, 255));

        choice_emplacement.setBackground(new java.awt.Color(153, 153, 255));

        choice_type_porte.setBackground(new java.awt.Color(153, 153, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(commentaire_jTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(choice_type_porte, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(choice_emplacement, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(choice_type_bien, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(choice_type_appartenance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(10, 10, 10))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(21, 21, 21))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12))
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(pays_jformattedtext)
                                .addGap(135, 135, 135))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(code_postale_jformattedtext, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(numero_voie_jformattedtext, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(nom_voie_jformattedtext)
                                .addGap(10, 10, 10))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(ville_jformattedtext)
                                .addGap(10, 10, 10))))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(choice_type_bien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(choice_type_appartenance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(choice_emplacement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(choice_type_porte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(commentaire_jTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numero_voie_jformattedtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nom_voie_jformattedtext, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(code_postale_jformattedtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(ville_jformattedtext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(pays_jformattedtext, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        quitter_jbutton.setBackground(new java.awt.Color(255, 0, 0));
        quitter_jbutton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        quitter_jbutton.setText("Quitter");
        quitter_jbutton.setSize(new java.awt.Dimension(140, 30));
        quitter_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitter_jbuttonActionPerformed(evt);
            }
        });

        continuer_jbutton.setBackground(new java.awt.Color(0, 255, 51));
        continuer_jbutton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        continuer_jbutton.setText("Continuer");
        continuer_jbutton.setSize(new java.awt.Dimension(140, 30));
        continuer_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                continuer_jbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quitter_jbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(continuer_jbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitter_jbutton)
                    .addComponent(continuer_jbutton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(111, 111, 111))
        );

        setSize(new java.awt.Dimension(409, 581));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void decliner_jbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decliner_jbuttonActionPerformed
        close();
        //FirstWindows firWindows = new FirstWindows();
        //firWindows.setVisible(true);
    }//GEN-LAST:event_decliner_jbuttonActionPerformed

    private void accepter_jbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accepter_jbuttonActionPerformed
        //close();
    }//GEN-LAST:event_accepter_jbuttonActionPerformed

    private void quitter_jbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitter_jbuttonActionPerformed
        close();
    }//GEN-LAST:event_quitter_jbuttonActionPerformed

    private void continuer_jbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_continuer_jbuttonActionPerformed
    
        //System.out.println("Day : " + date_naissance_saisi.getDate() + " Month : " + date_naissance_saisi.getMonth() + " Year : " + date_naissance_saisi.getYear());
        // Lire d'abord les donnees saisies par l'utilisateur
        readData();
        if (statusDataChecked()){
            // Copie all the identification information of the owner on the class to serialize
            String [] device_data = this.arrangeDeviceData();
            DeviceLinkingData device = new DeviceLinkingData(device_data);
            
            if (device.isDeviceDataCorrect()){
                // Make the serialization to save the peripherique information on a ser file
                File file = new File("device_to_link.ser");
                System.out.println("Debut de la serialization des informations du peripheriqu");
                try(FileOutputStream fileOut = new FileOutputStream(file); ObjectOutputStream out = new ObjectOutputStream(fileOut)){
                    out.writeObject(device);
                    out.close();
                    System.out.println("The Serialization of the peripherique information is done succesffully");
                }catch(IOException i)
                {
                    System.out.println("Exception");
                }
              
                /* Deserializable of the file containing the information of the owner
                   to add the indentifier number and password */          
                /*OwnerInformation owner = null;
                file = new File("owner_information.ser");
                try (FileInputStream fileIn = new FileInputStream(file); ObjectInputStream in = new ObjectInputStream(fileIn)) {
                    owner = (OwnerInformation) in.readObject();
                    System.out.println("Deserialization correct");
                }catch(IOException i)
                {
                   return;
                }catch(ClassNotFoundException c)
                {
                   System.out.println("OwnerInformation class not found");
                   return;
                }
                JPasswordField original_password = owner.getOwnerPassword();
                System.out.println("password got succesfully");
                
                int check_number_password_typed = 0;
                String enterred_password = "";
                boolean status = false;
                
                while ((check_number_password_typed <3 && status == false) || (status == false)){
                    check_number_password_typed ++;
                    System.out.println("Show DIALOG");
                    enterred_password =JOptionPane.showInputDialog("Confirm your Password");  
                    status = enterred_password.equals(original_password.getText());
                    System.out.println("Status Password = " + status);
                }
                //if (check_number_password_typed > 3 || status == false){
                if (!status){                    
                    JOptionPane.showMessageDialog(null, "Vous avez depasse le nombre de\nsaisi de mot de passe autorise.\nLe service de rattachement est indisponible temporairement" + "Cliquez sur OK pour fermer l'application", "Mot de Passe incorrect", JOptionPane.ERROR_MESSAGE);
                    System.out.println("Error password");
                    close();
                }
                else{
                    System.out.println("TOUT est OK");
                    close();
                    PeripheriqueSummaryInformation periph_summary = new PeripheriqueSummaryInformation();
                    periph_summary.setVisible(true);
                    System.out.println("Lancement de la fenertre");
                }*/ 
                
                close();
                PeripheriqueSummaryInformation periph_summary = new PeripheriqueSummaryInformation();
                periph_summary.setVisible(true);
                System.out.println("Lancement de la fenertre");
            }
            else{
                System.out.println("Certaines donnees du peripherique ne sont pas correctes");
                System.out.println("Impossible de sauvegarder les informations");
            }
            
        }
        else{
            CheckDataTyped();
        }
        
    }//GEN-LAST:event_continuer_jbuttonActionPerformed

    private void pays_jformattedtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pays_jformattedtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pays_jformattedtextActionPerformed

    private void code_postale_jformattedtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_code_postale_jformattedtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_code_postale_jformattedtextActionPerformed

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PeripheriqueIdentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PeripheriqueIdentification().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton accepter_jbutton;
    private java.awt.Choice choice_emplacement;
    private java.awt.Choice choice_type_appartenance;
    private java.awt.Choice choice_type_bien;
    private java.awt.Choice choice_type_porte;
    private javax.swing.JFormattedTextField code_postale_jformattedtext;
    private javax.swing.JTextField commentaire_jTextField;
    private javax.swing.JToggleButton continuer_jbutton;
    private javax.swing.JToggleButton decliner_jbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField nom_voie_jformattedtext;
    private javax.swing.JFormattedTextField numero_voie_jformattedtext;
    private javax.swing.JTextField pays_jformattedtext;
    private javax.swing.JToggleButton quitter_jbutton;
    private javax.swing.JTextField ville_jformattedtext;
    // End of variables declaration//GEN-END:variables

    /*
     * Cette methode permet de lire les informations saisies par l'utilisateur après 
     * avoir valide la requête. 
     */
    private void readData(){
        
        // Recuperation des informations selectionnees via le popup
        type_de_bien = choice_type_bien.getItem(choice_type_bien.getSelectedIndex());
        type_appartenance = choice_type_appartenance.getItem(choice_type_appartenance.getSelectedIndex());
        emplacement= choice_emplacement.getItem(choice_emplacement.getSelectedIndex());
        type_porte = choice_type_porte.getItem(choice_type_porte.getSelectedIndex());
        
        // Recuperation de l'adresse complete de l'utilisateur
        commentaire_porte    = commentaire_jTextField.getText();
        numero_voie_saisi    = numero_voie_jformattedtext.getText();
        nom_voie_saisi       = nom_voie_jformattedtext.getText();
        code_postale_saisi   = code_postale_jformattedtext.getText();
        ville_saisi          = ville_jformattedtext.getText();
        pays_saisi           = pays_jformattedtext.getText();
    }
    
    /*
     * Cette methode permet de verifier si les donnees saisies sont correctes ou pas.
     */
    private boolean statusDataChecked (){
        return (
                (!"...".equals(type_de_bien)) && 
                (!"...".equals(type_appartenance)) && 
                (!"...".equals(emplacement)) &&
                (!"...".equals(type_porte)) && 
                (commentaire_porte      != null && !commentaire_porte.isEmpty()) && 
                (numero_voie_saisi      != null && !numero_voie_saisi.isEmpty()) && 
                (nom_voie_saisi         != null && !nom_voie_saisi.isEmpty()) &&
                (code_postale_saisi     != null && !code_postale_saisi.isEmpty()) &&
                (ville_saisi            != null && !ville_saisi.isEmpty()) && 
                (pays_saisi             != null && !pays_saisi.isEmpty())
               );
    }
    
    /*
     * Cette methode permet de verifier les donnees saisies
     * incorrectes et notifie l'utilisateur le champ à verifier.
     */
    private void CheckDataTyped (){
        String notification = "";
        
        if (type_de_bien.equals("...")){
            notification = notification + " - Type de Bien\n";
        }
        
        if (type_appartenance.equals("...")){
            notification = notification + " - Type d'appartenance\n";
        }
        
        if (emplacement.equals("...")){
            notification = notification + " - Emplacement\n";
        }
        
        if (type_porte.equals("...")){
            notification = notification + " - Type de porte\n";
        }
        
        if (Integer.parseInt(numero_voie_saisi) < 0){
            notification = notification + " - Numero de la voie\n";
        }
        
        if (nom_voie_saisi == null || nom_voie_saisi.isEmpty()){
            notification = notification + " - Nom de la voie\n";
        }
        
        if (Integer.parseInt(code_postale_saisi) < 0){
            notification = notification + " - Code Postale\n";
        }
        
        if (ville_saisi == null || ville_saisi.isEmpty()){
            notification = notification + " - Ville\n";
        }
        
        if (pays_saisi == null || pays_saisi.isEmpty()){
            notification = notification + " - Pays\n";
        }
        
        // Affiche un message à l'utilisateur pour corriger les informations manquantes
        JOptionPane.showMessageDialog(null, "Le ou Les champs ci-dessous sont vides\n" + notification + "Cliquez sur OK et saisissez les informations manquantes", "Informations manquantes", JOptionPane.ERROR_MESSAGE);
    }
    
    private void close(){
        WindowEvent winClosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosing);
    }
    /**
     * Methode serialVersionUID used only for the serialization
     */
    private static final long serialVersionUID = 42L; 
      
    /**
     * Methode lister_Type_Bien : Liste les types de bien definis 
     * 
     */
    private void lister_Type_Bien (){
        choice_type_bien.add("Maison");
        choice_type_bien.add("Appartement");
        choice_type_bien.add("Entreprise");
        choice_type_bien.add("Magasin");
        choice_type_bien.add("Entrepot");
        choice_type_bien.add("Parking");
        choice_type_bien.add("Autre");
        choice_type_bien.add("...");
    }
    
    /**
     * Methode lister_Type_Appartenance : Liste les types d'appartenance definis 
     * 
     */
    private void lister_Type_Appartenance (){
      
        choice_type_appartenance.add("Proprietaire");
        choice_type_appartenance.add("Locataire");
        choice_type_appartenance.add("Administrateur");
        choice_type_appartenance.add("Superviseur");
        choice_type_appartenance.add("...");
    }
    
    /**
     * Methode lister_Type_Emplacement : Liste les types d'emplacement definis 
     * 
     */
    private void lister_Type_Emplacement (){
        choice_emplacement.add("Rez de chaussee");
        choice_emplacement.add("1er Sous-sol");
        choice_emplacement.add("2em Sous-sol");
        choice_emplacement.add("1er Etage");
        choice_emplacement.add("2em Etage");
        choice_emplacement.add("3em Etage");
        choice_emplacement.add("Local Poubelle");
        choice_emplacement.add("Local Gaz");
        choice_emplacement.add("Local Electricite");
        choice_emplacement.add("Local Chauffage");
        choice_emplacement.add("Local Cave Public");
        choice_emplacement.add("...");
    }
    
    /**
     * Methode lister_Type_Porte : Liste les types de portes possibles 
     * 
     */
    private void lister_Type_Porte (){  
        choice_type_porte.add("Entree Principale");
        choice_type_porte.add("Porte Appartement");
        choice_type_porte.add("Entree Zone confidentielle");
        choice_type_porte.add("Porte Garage");
        choice_type_porte.add("...");
    }
    
    /**
     * Methode : arrangeDeviceData() arrange the data about the device which is in the linking process
     * @return 
     */
    private String [] arrangeDeviceData(){
        String [] data = new String[10];
        
        data[0] = type_de_bien;
        data[1] = type_appartenance;
        data[2] = emplacement;
        data[3] = type_porte;
        data[4] = commentaire_porte;
        data[5] = numero_voie_saisi;
        data[6] = nom_voie_saisi;
        data[7] = code_postale_saisi;
        data[8] = ville_saisi;
        data[9] = pays_saisi;

        return data;
    }
    
    /**
     * Methode setUserChoice(String)
     * @param old_type_bien
     * @param old_type_appartenance
     * @param old_type_porte
     * @param old_emplacement
     * @param old_commentaire
     * @param old_numero_voie
     * @param old_nom_voie
     * @param old_code_postale
     * @param old_ville
     * @param old_pays
     */
    public final void setUserChoice(String old_type_bien, 
                                    String old_type_appartenance, 
                                    String old_emplacement, 
                                    String old_type_porte, 
                                    String old_commentaire,
                                    int old_numero_voie, 
                                    String old_nom_voie, 
                                    int old_code_postale, 
                                    String old_ville,
                                    String old_pays)
    {
        //1 => Compter le nombre de choice
        //2 => Enregistrer la liste dans des tableaux 
        //3 => Comparer avec les anciens choix pour rearranger la liste
        //4 => Afficher la liste en mettant par defaut les anciens choix
        // Process to keep the old user choice for type de bien in the first item menu
        // Get the item of the old choice component
        int nbre_choice_type_bien   = choice_type_bien.getItemCount();
        System.out.println("Size = " + nbre_choice_type_bien);
        // Remove the old choice of the user
        choice_type_bien.remove(old_type_bien);
        // Get all the Item contained in the old choice component and put it in the String tab
        String [] old_tab_choice_type_bien = new String [nbre_choice_type_bien];
        for (int i=1; i<nbre_choice_type_bien; i++){
            old_tab_choice_type_bien[i] = choice_type_bien.getItem(i-1);
        }
        // Put th old choice of the user at the first position of the String tab
        old_tab_choice_type_bien[0] = old_type_bien;
        // Delete the contains of the old choice component
        choice_type_bien.removeAll();
        // Add and Arrange the new Item by putting the old choice at the first item of the new compoenent choice
        for (int i=0; i<nbre_choice_type_bien; i++){
            choice_type_bien.insert(old_tab_choice_type_bien[i], i);            
        }
        
        // Process to keep the old user choice for type appartenance in the first item menu
        int nbre_choice_type_appartenance   = choice_type_appartenance.getItemCount();
        choice_type_appartenance.remove(old_type_appartenance);
        String [] old_tab_choice_type_appartenance = new String [nbre_choice_type_appartenance];
        for (int i=1; i<nbre_choice_type_appartenance; i++){
            old_tab_choice_type_appartenance[i] = choice_type_appartenance.getItem(i-1);
        }
        old_tab_choice_type_appartenance[0] = old_type_appartenance;
        choice_type_appartenance.removeAll();
        for (int i=0; i<nbre_choice_type_appartenance; i++){
            choice_type_appartenance.insert(old_tab_choice_type_appartenance[i], i);            
        }
        
        // Process to keep the old user choice for emplacement in the first item menu
        int nbre_choice_emplacement   = choice_emplacement.getItemCount();
        choice_emplacement.remove(old_emplacement);
        String [] old_tab_choice_emplacement = new String [nbre_choice_emplacement];
        for (int i=1; i<nbre_choice_emplacement; i++){
            old_tab_choice_emplacement[i] = choice_emplacement.getItem(i-1);
        }
        old_tab_choice_emplacement[0] = old_emplacement;
        choice_emplacement.removeAll();
        for (int i=0; i<nbre_choice_emplacement; i++){
            choice_emplacement.insert(old_tab_choice_emplacement[i], i);            
        }
        
        // Process to keep the old user choice for type porte in the first item menu
        int nbre_choice_type_porte   = choice_type_porte.getItemCount();
        choice_type_porte.remove(old_type_porte);
        String [] old_tab_choice_type_porte = new String [nbre_choice_emplacement];
        for (int i=1; i<nbre_choice_type_porte; i++){
            old_tab_choice_type_porte[i] = choice_type_porte.getItem(i-1);
        }
        old_tab_choice_type_porte[0] = old_type_porte;
        choice_type_porte.removeAll();
        for (int i=0; i<nbre_choice_type_porte; i++){
            choice_type_porte.insert(old_tab_choice_type_porte[i], i);            
        }
        
        // Process to keep the old user acomment by the program
        commentaire_jTextField.setText(old_commentaire);
        
        // Process to keep the old user addresse typed and saved by the program
        numero_voie_jformattedtext.setText(String.valueOf(old_numero_voie));
        nom_voie_jformattedtext.setText(old_nom_voie);
        code_postale_jformattedtext.setText(String.valueOf(old_code_postale));
        ville_jformattedtext.setText(old_ville);
        pays_jformattedtext.setText(old_pays);
    }
}
