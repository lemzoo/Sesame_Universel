/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SesameApp;

import com.pi4j.io.serial.SerialPortException;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

/**
 *
 * @author LamineBA
 */
public class PeripheriqueSummaryInformation extends javax.swing.JFrame implements ConstantsConfiguration{

    private PeripheriqueInformation periph;
    private SerialPortGPIO port;
    private String message_to_send = "";
    private String received_data = "";
    private String old_received_data = "";
    private boolean status_reception = true;
    
    public PeripheriqueSummaryInformation() {
        initComponents();
        
        /* Deserializable of the file containing the information 
           of the periph to add the indentifier number and password */          
        periph = null;
        File file = new File("peripherique_information.ser");
        try (FileInputStream fileIn = new FileInputStream(file); ObjectInputStream in = new ObjectInputStream(fileIn)) {
            periph = (PeripheriqueInformation) in.readObject();
            System.out.println("Deserialization complete");
            System.out.println("Debut écriture");
            type_bien_jlabel.setText(periph.getTypeBien());
            type_appartenance_jlabel.setText(periph.getTypeAppartenance());
            emplacement_jlabel.setText(periph.getEmplacement());
            type_porte_jlabel.setText(periph.getTypePorte());
            commentaire_jTextField.setText(periph.getCommentaire());
            numero_nom_voie_jlabel.setText(periph.getNumeroRue() + " " + periph.getNomRue());
            code_postale_ville_jlabel.setText(periph.getCodePostale() + " " + periph.getVille());
            pays_jlabel.setText(periph.getPays()); 
            System.out.println("Fin écriture");
        }catch(IOException i)
        {
            System.out.println("Return");
        }catch(ClassNotFoundException c)
        {
           System.out.println("PeripheriqueInformation class not found");
        }
        
        try {
            // open the default serial port provided on the GPIO header
            int baudrate = 115200;
            port = new SerialPortGPIO(baudrate);
        }
        catch(SerialPortException ex) {
            System.out.println(" ==>> SERIAL SETUP FAILED : " + ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        type_appartenance_jlabel = new javax.swing.JLabel();
        type_bien_jlabel = new javax.swing.JLabel();
        numero_nom_voie_jlabel = new javax.swing.JLabel();
        emplacement_jlabel = new javax.swing.JLabel();
        type_porte_jlabel = new javax.swing.JLabel();
        code_postale_ville_jlabel = new javax.swing.JLabel();
        pays_jlabel = new javax.swing.JLabel();
        commentaire_jTextField = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        lancer_procedure_jbutton = new javax.swing.JToggleButton();
        corriger_infos_jbutton = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Recapitulatif des informations du periphérique");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel1.setText("Recapitulatif des informations du periphérique");
        jLabel1.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(25, 25, 25))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel13.setText("Type de Bien : ");

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel14.setText("Type d'appartenance : ");

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel15.setText("Emplacement : ");

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel16.setText("Type de porte : ");

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel17.setText("Commentaire sur le periphérique : ");

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel18.setText("Adresse de Résidence ");

        type_appartenance_jlabel.setBackground(new java.awt.Color(204, 255, 204));
        type_appartenance_jlabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        type_appartenance_jlabel.setText("type appartenance");

        type_bien_jlabel.setBackground(new java.awt.Color(204, 255, 204));
        type_bien_jlabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        type_bien_jlabel.setText("type de bien");
        type_bien_jlabel.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                //type_bien_jlabelInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        numero_nom_voie_jlabel.setBackground(new java.awt.Color(204, 255, 204));
        numero_nom_voie_jlabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        numero_nom_voie_jlabel.setText("numero et nom de la voie");

        emplacement_jlabel.setBackground(new java.awt.Color(204, 255, 204));
        emplacement_jlabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        emplacement_jlabel.setText("emplacement");

        type_porte_jlabel.setBackground(new java.awt.Color(204, 255, 204));
        type_porte_jlabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        type_porte_jlabel.setText("type de porte");

        code_postale_ville_jlabel.setBackground(new java.awt.Color(204, 255, 204));
        code_postale_ville_jlabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        code_postale_ville_jlabel.setText("code postale et ville");

        pays_jlabel.setBackground(new java.awt.Color(204, 255, 204));
        pays_jlabel.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        pays_jlabel.setText("pays");

        commentaire_jTextField.setBackground(new java.awt.Color(204, 255, 204));
        commentaire_jTextField.setFont(new java.awt.Font("Georgia", 1, 14)); // NOI18N
        commentaire_jTextField.setText("Porte de ma résidence principale");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(type_bien_jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                                    .addComponent(type_appartenance_jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addComponent(commentaire_jTextField)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(type_porte_jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emplacement_jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(numero_nom_voie_jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(code_postale_ville_jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pays_jlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type_bien_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type_appartenance_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(emplacement_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(type_porte_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(12, 12, 12)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(commentaire_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(numero_nom_voie_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(code_postale_ville_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pays_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {code_postale_ville_jlabel, emplacement_jlabel, numero_nom_voie_jlabel, pays_jlabel, type_appartenance_jlabel, type_bien_jlabel, type_porte_jlabel});

        jPanel3.setBackground(new java.awt.Color(51, 0, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 9, Short.MAX_VALUE)
        );

        lancer_procedure_jbutton.setBackground(new java.awt.Color(0, 255, 51));
        lancer_procedure_jbutton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        lancer_procedure_jbutton.setText("Lancer la procedure");
        lancer_procedure_jbutton.setSize(new java.awt.Dimension(140, 30));
        lancer_procedure_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    lancerProcedureActionPerformed(evt);        
                }catch(InterruptedException e)
                {
                    //System.out.println("Impossible de lancer la methode lancerProcedureActionPerformed " + e.getMessage());
                }
            }
        });

        corriger_infos_jbutton.setBackground(new java.awt.Color(255, 0, 0));
        corriger_infos_jbutton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        corriger_infos_jbutton.setText("Corriger les infos");
        corriger_infos_jbutton.setSize(new java.awt.Dimension(140, 30));
        corriger_infos_jbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                corrigerInformationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(corriger_infos_jbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lancer_procedure_jbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(corriger_infos_jbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lancer_procedure_jbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(409, 569));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void corrigerInformationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_corriger_infos_jbuttonActionPerformed
        close();
        PeripheriqueIdentification periph_identification = new PeripheriqueIdentification();
        periph_identification.setUserChoice(periph.getTypeBien(), periph.getTypeAppartenance(), 
                                            periph.getEmplacement(), periph.getTypePorte(), periph.getCommentaire(),
                                            periph.getNumeroRue(), periph.getNomRue(), periph.getCodePostale(), periph.getVille(), periph.getPays());
        periph_identification.setVisible(true);
    }//GEN-LAST:event_corriger_infos_jbuttonActionPerformed

    private void lancerProcedureActionPerformed(java.awt.event.ActionEvent evt) throws InterruptedException {                                                    
        // 1. Instanciation de la communication uart
        // 2. Envoie de la trame demande de rattachement d'un Sesame; Periphérique verifie s'il est rattaché ou pas
        // 3. Peripherique renvoie une autorisation de rattachement
        // 4. Sesame envoie le fichier d'information du peripherique et son identifiant
        
        // SEND "BONJOUR" and wait the answer of the device. The expected answer is "BONJOUR"  
        try {
            port.sendData(BONJOUR);
            System.out.println("BONJOUR : envoyé avec succes");
        }catch(InterruptedException e){
            System.out.println("Impossible to the send the following message : BONJOUR");
        }
        
        // Check the answer of the device in the while loop
        boolean flag = true;
        int tempo = 0;
        while (flag){
            if (tempo>1000){
                flag=false;
                System.out.println("Tempo d'attente de la réponse du périphérique a expiré");
                tempo = 0;
            }
            else{
                flag = (port.getLastReceivedData()!=null && !port.getLastReceivedData().equals(BONJOUR));
                if (!flag){
                    System.out.println("|BONJOUR| recu de la part du périphérique");
                }
                tempo = tempo + 10;
                Thread.sleep(10);
            }
        }

        // The expected answer is received by the SESAME 
        if (!flag){
            // Send DEMANDE_ENREGISTREMENT_PROPRIETAIRE to the device and wait for the answer
            try {
                port.sendData(DEMANDE_ENREGISTREMENT_PROPRIETAIRE);
                System.out.println( DEMANDE_ENREGISTREMENT_PROPRIETAIRE + " : envoyé avec succes");
            }catch(InterruptedException e){
                System.out.println("Impossible to the send the following message : " + DEMANDE_ENREGISTREMENT_PROPRIETAIRE);
            }
        }
        
        // Check the answer of the device in the while loop
        flag = true;
        tempo = 0;
        while (flag){
            if (tempo>1000){
                flag=false;
                System.out.println("Tempo d'attente de la réponse du périphérique a expiré");
                tempo = 0;
            }
            else{
                flag = (port.getLastReceivedData()!=null && !port.getLastReceivedData().equals(ENREGISTREMENT_PROPRIETAIRE_AUTORISEE));
                
                if (!flag){
                    System.out.println("|ENREGISTREMENT_PROPRIETAIRE_AUTORISEE| recu de la part du périphérique");
                }
                tempo = tempo + 10;
                Thread.sleep(10);
            }
        }

        Thread.sleep(500);
        
        // The expected answer is received by the SESAME 
        if (!flag){
            System.out.println("Enregistrement du proprietaire autorisé par le periphérique");
            String [] data_to_send = arrangeOwnerInformation();
            // Arrange the owner information and Send it
            port.sendData(data_to_send);
        }
        
        flag = true;
        tempo = 0;
        System.out.println("Attente du tempo");
        boolean status_linking_owner = false;
        while (flag){
            if (tempo>10000){
                flag=false;
                System.out.println("Tempo d'attente de la réponse du périphérique a expiré");
                tempo = 0;
            }
            else{
                flag = (port.getLastReceivedData()!=null && !port.getLastReceivedData().equals(PROPRITAIRE_ENREGISTREE_CORRECTEMENT));
                if (!flag){
                    System.out.println("|PROPRITAIRE_ENREGISTREE_CORRECTEMENT| dans le périphérique");
                    status_linking_owner = true;
                }
                else{
                    tempo =  tempo + 10;
                    Thread.sleep(10);
                }
            }
        }

        // Wait 10 secondes
        tempo = 0;
        int seconde = 1000;
        while (tempo<5*seconde){
            
            System.out.println("Tempo = " + tempo);
            tempo = tempo + seconde;
            Thread.sleep(seconde);
        }
        
        // Send Data about the connection between Device and Sesame
        // SEND "BONJOUR" and wait the answer of the device. The expected answer is "BONJOUR"  
        try {
            port.sendData(BONJOUR);
            System.out.println("BONJOUR : envoyé avec succes");
        }catch(InterruptedException e)
        {
            System.out.println("Impossible to the send the following message : BONJOUR");
        }
        
        // Check the answer of the device in the while loop
        flag = true;
        tempo = 0;
        while (flag){
            if (tempo>100){
                flag=false;
                System.out.println("Tempo d'attente de la réponse du périphérique a expiré");
                tempo = 0;
            }
            else{
                flag = (port.getLastReceivedData()!=null && !port.getLastReceivedData().equals(BONJOUR));
                if (!flag){
                    System.out.println("|BONJOUR| recu de la part du périphérique");
                }
                tempo = tempo + 10;
                Thread.sleep(10);
            }
        }
        
        // The expected answer is received by the SESAME 
        if (!flag){
            // Send DEMANDE_RATTACHEMENT to the device and wait for the answer
            try {
                port.sendData(DEMANDE_RATTACHEMENT_SESAME);
                System.out.println( DEMANDE_RATTACHEMENT_SESAME + " : envoyé avec succes");
            }catch(InterruptedException e)
            {
                System.out.println("Impossible to the send the following message : DEMANDE_RATTACHEMENT_SESAME");
            }
        }
        
        // Check the answer of the device in the while loop
        flag = true;
        tempo = 0;
        while (flag){
            if (tempo>1000){
                flag=false;
                System.out.println("Tempo d'attente de la réponse du périphérique a expiré");
                tempo = 0;
            }
            else{
                flag = (port.getLastReceivedData()!=null && !port.getLastReceivedData().equals(RATTACHEMENT_AUTORISEE_PERIPHERIQUE));
                
                if (!flag){
                    System.out.println("|RATTACHEMENT_AUTORISEE_PERIPHERIQUE| recu de la part du périphérique");
                }
                tempo = tempo + 100;
                Thread.sleep(100);
            }
        }

        Thread.sleep(1000);
        System.out.println("Status flag avant arrangeLinkingDate() " + flag);
        // The expected answer is received by the SESAME 
        if (!flag){
            System.out.println("|RATTACHEMENT_AUTORISEE_PERIPHERIQUE| recu de la part du periphérique");
            
            // Arrange the owner information and Send it
            port.sendData(arrangeLinkingData());
        }
        
        flag = true;
        tempo = 0;
        boolean status_linking_sesame = false;
        while (flag){
            
            if (tempo>10000){
                flag=false;
                System.out.println("Tempo d'attente de la réponse du périphérique a expiré");
                tempo = 0;
            }
            else{
                flag = (port.getLastReceivedData()!=null && !port.getLastReceivedData().equals(SESAME_RATTACHE_CORRECTEMENT));
                if (!flag){
                    System.out.println("|SESAME_RATTACHE_CORRECTEMENT| recu de la part du périphérique");
                    status_linking_sesame = true;
                }
                tempo = tempo + 100;
                Thread.sleep(100);
            }
        }
        
        // Wait 10 secondes
        tempo = 0;
        seconde = 1000;
        while (tempo<5*seconde){
            
            System.out.println("Tempo = " + tempo);
            tempo = tempo + seconde;
            Thread.sleep(seconde);
        }
        
        if (status_linking_owner && status_linking_sesame){
            System.out.println("L'enregistrement et le Rattachement du Sesame se sont effectués avec succés");
            // SEND "BONJOUR" and wait the answer of the device. The expected answer is "BONJOUR"  
            try {
                port.sendData(DEMANDE_CONFIRMATION_RATTACHEMENT);
                System.out.println("DEMANDE_CONFIRMATION_RATTACHEMENT : envoyé avec succes");
            }catch(InterruptedException e)
            {
                System.out.println("Impossible to the send the following message : BONJOUR");
            }
        }
        else{
            System.out.println("L'enregistrement et le Rattachement du Sesame ne sont pas effectués correctement");   
        }
    }                                                    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PeripheriqueSummaryInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PeripheriqueSummaryInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PeripheriqueSummaryInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PeripheriqueSummaryInformation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new PeripheriqueSummaryInformation().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel code_postale_ville_jlabel;
    private javax.swing.JTextField commentaire_jTextField;
    private javax.swing.JToggleButton corriger_infos_jbutton;
    private javax.swing.JLabel emplacement_jlabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JToggleButton lancer_procedure_jbutton;
    private javax.swing.JLabel numero_nom_voie_jlabel;
    private javax.swing.JLabel pays_jlabel;
    private javax.swing.JLabel type_appartenance_jlabel;
    private javax.swing.JLabel type_bien_jlabel;
    private javax.swing.JLabel type_porte_jlabel;
    // End of variables declaration//GEN-END:variables

    private static final long serialVersionUID = 42L;
    
    /*
     * Methode : close() allow you to close the current windows
     */
    private void close(){
        WindowEvent winClosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosing);
    }
    
    /**
     * Methode arrangeOwnerInformation() allows you to classify all the information 
     * about the owner of the SESAME. 
     * @return data[] which type is String
     */ 
    public String [] arrangeOwnerInformation (){
        String [] owner_data = new String[14];
        String [] data = new String[17];

        /* Deserializable of the file containing the information of the owner
         * to add the indentifier number and password 
         */          
        OwnerInformation user = null;
        File file = new File("owner_information.ser");
        try (FileInputStream fileIn = new FileInputStream(file); ObjectInputStream in = new ObjectInputStream(fileIn)) {
            user = (OwnerInformation) in.readObject();

            // Put the owner information in the buffer
            owner_data[0]  = user.getOwnerFirstName();
            owner_data[1]  = user.getOwnerLastName();
            owner_data[2]  = String.valueOf(user.getOwnerBirthdayDate().getDay());
            owner_data[3]  = String.valueOf(user.getOwnerBirthdayDate().getMonth());
            owner_data[4]  = String.valueOf(user.getOwnerBirthdayDate().getYear());
            owner_data[5]  = user.getOwnerPhoneNumber();
            owner_data[6]  = user.getOwnerEmailAddress();
            owner_data[7]  = String.valueOf(user.getOwnerStreetNumber());
            owner_data[8]  = user.getOwnerStreetName();
            owner_data[9]  = String.valueOf(user.getOwnerCodePostale());
            owner_data[10] = user.getOwnerCity();
            owner_data[11] = user.getOwnerCountry();
            owner_data[12] = user.getOwnerIdentifiant();
            owner_data[13] = user.getOwnerPassword().getText();

            // Send the first frame to inform the device all the data received after taht frame is to save
            data[0]  = DEBUT_ENVOIE_INFORMATION_PROPRIETAIRE;

            // Put the linking information 
            for (int i=0; i<owner_data.length; i++){
                data[i+1] = owner_data[i];
            }

            // Create the checksum
            int formule = 0; 
            int number_element = owner_data.length;
            for (int j=0; j<number_element; j++){
                formule = formule + (number_element-j)*owner_data[j].length();
            }
            int checksum = formule - number_element*128;
            data[number_element + 1] = String.valueOf(checksum);

            // Send the last frame to inform the device that is the last data
            data[number_element + 2] = FIN_ENVOI_INFORMATION_PROPRIETAIRE;

        }catch(IOException i){
        }catch(ClassNotFoundException c){
           System.err.println("OwnerInformation class not found");
        }
        
        return data;
    }

    /**
     * Methode arrangeLinkingData() allows you to classify all the information 
     * about the connection between the SESAME and Device. 
     * @return data[] which type is String
     */ 
    public String [] arrangeLinkingData (){
        String [] linking_data = new String[10];
        String [] data = new String[13];

        linking_data[0] = periph.getTypeBien();
        linking_data[1] = periph.getTypeAppartenance();
        linking_data[2] = periph.getEmplacement();
        linking_data[3] = periph.getTypePorte();
        linking_data[4] = periph.getCommentaire();
        linking_data[5] = Integer.toString(periph.getNumeroRue());
        linking_data[6] = periph.getNomRue();
        linking_data[7] = Integer.toString(periph.getCodePostale());
        linking_data[8] = periph.getVille();
        linking_data[9] = periph.getPays(); 

        // Create the DeviceLinkingData
        DeviceLinkingData device = new DeviceLinkingData(linking_data);
        // Make the Serizlization
        File file = new File("linking_data.ser");
        try{
            try (FileOutputStream fileOut = new FileOutputStream(file); ObjectOutputStream out = new ObjectOutputStream(fileOut)) {
                out.writeObject(device);
                System.out.println("linking_data.ser file is created correcly");
            }
        }catch(IOException i)
        {
            System.out.println("Exception " + i.getMessage());
        }
        System.out.println("Object Device is created");
        // Send the first frame to inform the device that the Sesame is ready the send all the data about the linking
        data[0] = DEBUT_ENVOI_INFORMATION_RATTACHEMENT;
        
        // Put the linking information 
        for (int i=0; i<linking_data.length; i++){
            data[i+1] = linking_data[i];
        }
        System.out.println("the buffer of the linking data is Filled out correctly");
        //System.arraycopy(linking_data, 0, data, 1, linking_data.length);

        // Create the checksum
        int formule = 0; 
        int number_element = linking_data.length;
        for (int j=0; j<number_element; j++){
            formule = formule + (number_element-j)*linking_data[j].length();
        }
        int checksum = formule - number_element*128;
        data[number_element + 1] = Integer.toString(checksum);

        // Put the last frame to inform the device that is the last data about the linking
        data[number_element + 2] = FIN_ENVOI_INFORMATION_RATTACHEMENT;

        return data;
    }
}