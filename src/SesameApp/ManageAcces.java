/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SesameApp;

import java.awt.*;
import java.awt.event.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import javax.swing.*;
import javax.swing.event.*;

/**
 *
 * @author LamineBA
 */
public class ManageAcces extends JFrame implements ListSelectionListener {

    /**
     * Creates new form ManageAcces
     */
    private String selected_item="";
    
    public ManageAcces() {
        initComponents();
        
        // init the list
        fillOutTheChoiceList();
        continuer.setEnabled(false);
        //liste_peripherique.add((ItemListener) ecouteur);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpanel_titre = new javax.swing.JPanel();
        titre_fenetre = new javax.swing.JLabel();
        separator_jpanel = new javax.swing.JPanel();
        quitter = new javax.swing.JButton();
        continuer = new javax.swing.JButton();
        liste_peripherique = new java.awt.List();
        separator_jpanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion des accès");

        titre_fenetre.setFont(new java.awt.Font("Monaco", 1, 18)); // NOI18N
        titre_fenetre.setText("Liste des péripheriques rattachés");

        javax.swing.GroupLayout jpanel_titreLayout = new javax.swing.GroupLayout(jpanel_titre);
        jpanel_titre.setLayout(jpanel_titreLayout);
        jpanel_titreLayout.setHorizontalGroup(
            jpanel_titreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_titreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titre_fenetre)
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jpanel_titreLayout.setVerticalGroup(
            jpanel_titreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpanel_titreLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titre_fenetre)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        separator_jpanel.setBackground(new java.awt.Color(0, 153, 255));

        javax.swing.GroupLayout separator_jpanelLayout = new javax.swing.GroupLayout(separator_jpanel);
        separator_jpanel.setLayout(separator_jpanelLayout);
        separator_jpanelLayout.setHorizontalGroup(
            separator_jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        separator_jpanelLayout.setVerticalGroup(
            separator_jpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        quitter.setBackground(new java.awt.Color(255, 153, 153));
        quitter.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        quitter.setText("Quitter");

        continuer.setBackground(new java.awt.Color(153, 255, 51));
        continuer.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        continuer.setText("Continuer");
        continuer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                continuerMouseReleased(evt);
            }
        });

        liste_peripherique.setBackground(new java.awt.Color(153, 153, 255));
        liste_peripherique.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                liste_peripheriqueMouseClicked(evt);
            }
        });

        separator_jpanel1.setBackground(new java.awt.Color(0, 153, 255));

        javax.swing.GroupLayout separator_jpanel1Layout = new javax.swing.GroupLayout(separator_jpanel1);
        separator_jpanel1.setLayout(separator_jpanel1Layout);
        separator_jpanel1Layout.setHorizontalGroup(
            separator_jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        separator_jpanel1Layout.setVerticalGroup(
            separator_jpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(liste_peripherique, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpanel_titre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separator_jpanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quitter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(continuer))
                    .addComponent(separator_jpanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jpanel_titre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separator_jpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(liste_peripherique, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(separator_jpanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitter)
                    .addComponent(continuer))
                .addGap(15, 15, 15))
        );

        //liste_peripherique.addListSelectionListener(this);

        setSize(new java.awt.Dimension(400, 425));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void liste_peripheriqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_liste_peripheriqueMouseClicked
        // TODO add your handling code here:
        selected_item = liste_peripherique.getSelectedItem();
        System.out.println("Vous avez selectionné : " + selected_item);
        continuer.setEnabled(true);
    }//GEN-LAST:event_liste_peripheriqueMouseClicked

    private void continuerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_continuerMouseReleased
        // TODO add your handling code here:
        //setSelectedId()
        AccesIHM acces_ihm = new AccesIHM ();
        acces_ihm.setSelectedId(selected_item);
        acces_ihm.update();
        acces_ihm.setVisible(true);
    }//GEN-LAST:event_continuerMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageAcces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageAcces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageAcces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageAcces.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ManageAcces().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton continuer;
    private javax.swing.JPanel jpanel_titre;
    private java.awt.List liste_peripherique;
    private javax.swing.JButton quitter;
    private javax.swing.JPanel separator_jpanel;
    private javax.swing.JPanel separator_jpanel1;
    private javax.swing.JLabel titre_fenetre;
    // End of variables declaration//GEN-END:variables
    private String [] device_list = {"DEVICE 01", "DEVICE 02", "DEVICE XYZ", "DEVICE ACD",
                                     "SESAME DOORS", "SESAME", "EveryGates", "Vitry sur Seine", "Paris", "France"};
    ListSelectionListener ecouteur = null;    
    /**
     * Methode : fillOutTheChoiceList() allows you to fill out the choice list for the user
     * This methode will search all the device linked with this SESAME. 
     */
    public void fillOutTheChoiceList(){
        System.out.println("<--- BEGIN : fillOutTheChoiceList() --->");
        
        String [] all_device_id;
        
        // Make the deserialization of the table file which is the database of the device
        IdentifiantAndKeyTable table_id_key = null;
        boolean flag_extraction =  false;
        File file = new File("identifiant_and_key_table.ser");
        try (FileInputStream fileIn = new FileInputStream(file); ObjectInputStream in = new ObjectInputStream(fileIn)) {
            table_id_key = (IdentifiantAndKeyTable) in.readObject();

            flag_extraction = true;

        }catch(IOException i){
            flag_extraction = false;
            System.out.println("IOException : " + i.getMessage());
        }catch(ClassNotFoundException c){
           System.out.println("DeviceLinkingData class not found");
           flag_extraction =false;
        }
        
        // Check if the deserialization is done succesffully
        if (flag_extraction){
            all_device_id = table_id_key.getAllLinkedDeviceId();
            if (all_device_id.length>0){
                // Fit the device array list 
                for (int i=0; i<all_device_id.length; i++){
                    liste_peripherique.add(all_device_id[i], i);
                }
            }
            else{
                for (int i=0; i<device_list.length; i++){
                    liste_peripherique.add(device_list[i], i);
                }
            }
        }
        else{
            for (int i=0; i<device_list.length; i++){
                liste_peripherique.add(device_list[i], i);
            }
        }
        System.out.println("<--- END : fillOutTheChoiceList() --->");
        //liste_peripherique.addListSelectionListener(this);
    }

    @Override
    public void valueChanged(ListSelectionEvent e) {
        
    }
}