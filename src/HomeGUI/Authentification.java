/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HomeGUI;

import LinkingGUI.*;
import SharingGUI.*;
import SesameApp.*;
import AccesGUI.*;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

/**
 *
 * @author LamineBA
 */
public class Authentification extends javax.swing.JFrame {
    
    private final OwnerInformation user;
    private final CreateAccesKey all_key;
    private IdentifiantAndKeyTable table_id_key;
    private JPasswordField password;
    
    /**
     * Creates new form Authentification
     */
    public Authentification() {
        initComponents();
        password = new JPasswordField(null, "", 0);
        user = new OwnerInformation();
        System.out.println(user);
        
        // Create 10 keys for the test. 
        all_key = new CreateAccesKey(10);
        System.out.println(all_key);
        
        // Create the table which contains all identifiant and key with the linking information. 
        table_id_key = new IdentifiantAndKeyTable();
        System.out.println(table_id_key);
        
        username_jlabel.setText(user.getOwnerLastName() + " " + user.getOwnerFirstName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jlabel1 = new javax.swing.JLabel();
        password_jPasswordField = new javax.swing.JPasswordField();
        username_jlabel = new javax.swing.JLabel();
        jlabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        entrer_jToggleButton = new javax.swing.JToggleButton();
        quitter_jToggleButton = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Authentification avec mot de passe");
        setBackground(new java.awt.Color(153, 153, 0));
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon("/Users/LamineBA/Documents/02 - Startup EveryGates/13 - NetBeans Tutorial/SESAME_V2/nbproject/images/Login.JPEG")); // NOI18N

        jlabel1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jlabel1.setText("Administrator : ");

        password_jPasswordField.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        username_jlabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        username_jlabel.setText("jLabel2");

        jlabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jlabel2.setText("Password : ");

        entrer_jToggleButton.setBackground(new java.awt.Color(51, 204, 0));
        entrer_jToggleButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        entrer_jToggleButton.setText("Connexion");
        entrer_jToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entrer_jToggleButtonActionPerformed(evt);
            }
        });

        quitter_jToggleButton.setBackground(new java.awt.Color(204, 0, 0));
        quitter_jToggleButton.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        quitter_jToggleButton.setForeground(new java.awt.Color(255, 255, 255));
        quitter_jToggleButton.setText("Quitter");
        quitter_jToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitter_jToggleButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(quitter_jToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(entrer_jToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quitter_jToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(entrer_jToggleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setText("Page d'authentification");
        jLabel2.setToolTipText("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(101, 101, 101))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(51, 0, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)
                        .addGap(46, 46, 46))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlabel2)
                            .addComponent(jlabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(username_jlabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(password_jPasswordField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username_jlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password_jPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(400, 568));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void quitter_jToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitter_jToggleButtonActionPerformed
        close();
    }//GEN-LAST:event_quitter_jToggleButtonActionPerformed

    private void entrer_jToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entrer_jToggleButtonActionPerformed
        password = password_jPasswordField;
        
        if(isEmptyTheTwoPassword(password, user.getOwnerPassword())){
            System.out.println("Mot de passe vide");
        }
        else{
            if (isTheTwoPasswordIdentic(password, user.getOwnerPassword())){
                System.out.println("Mot de passe correct");
                
                // Make the Serialization for OwnerInformation 
                File file = new File("owner_information.ser");
                try(FileOutputStream fileOut = new FileOutputStream(file); ObjectOutputStream out = new ObjectOutputStream(fileOut)) {
                    out.writeObject(user);
                }catch(IOException i){
                    System.out.println("Exception for OwnerInformation");
                }
                // End of the Serialization for OwnerInformation
                System.out.println("Serialized data is saved in owner_information.ser");
                
                // Make the Serialization for CreateAccesKey 
                file = new File("all_key_saved.ser");
                try(FileOutputStream fileOut = new FileOutputStream(file); ObjectOutputStream out = new ObjectOutputStream(fileOut)) {
                    out.writeObject(all_key);
                }catch(IOException i){
                    System.out.println("Exception for CreateAccesKey");
                }
                // End of the Serialization for CreateAccesKey
                System.out.println("Serialized of CreateAccesKey is saved in all_key_saved.ser");
                
                // Make the Serialization for IdentifiantAndKeyTable 
                file = new File("identifiant_and_key_table.ser");
                try(FileOutputStream fileOut = new FileOutputStream(file); ObjectOutputStream out = new ObjectOutputStream(fileOut)) {
                    out.writeObject(table_id_key);
                }catch(IOException i){
                    System.out.println("Exception for IdentifiantAndKeyTable");
                }
                // End of the Serialization for IdentifiantAndKeyTable
                System.out.println("Serialized of IdentifiantAndKeyTable is saved in identifiant_and_key_table.ser");
                
                close();
                HomeScreen home = new HomeScreen();
                home.setVisible(true);
            }
            else{
                System.out.println("Mot de passe incorrect");
            }
                
        }
    }//GEN-LAST:event_entrer_jToggleButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Authentification.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Authentification().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton entrer_jToggleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel jlabel1;
    private javax.swing.JLabel jlabel2;
    private javax.swing.JPasswordField password_jPasswordField;
    private javax.swing.JToggleButton quitter_jToggleButton;
    private javax.swing.JLabel username_jlabel;
    // End of variables declaration//GEN-END:variables

    /**
     * Methode : close() allow you to close the current windows
     */
    private void close(){
        WindowEvent winClosing = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosing);
    }
    
    /**
     * Methode : isEmptyTheTwoPassword (JPasswordField first_password, JPasswordField second_password)
     * return :
     *   true : if the two passwords are empty
     *   false : if not. 
     */
    private boolean isEmptyTheTwoPassword(JPasswordField first_password, JPasswordField second_password){
        
        String notification = "";
        boolean check_first_password;
        check_first_password = first_password.getPassword().length == 0;
        
        boolean check_second_password; 
        check_second_password = second_password.getPassword().length == 0;
                
        if (check_first_password){
            notification = notification + " - Mot de Passe\n";
        }
     
        if (check_second_password){
            notification = notification + " - Confirmation\n";
        }
        
        if (check_first_password || check_second_password){
            JOptionPane.showMessageDialog(null, "Les champs ci-dessous sont vides\n" + notification + "Cliquez sur OK et saisissez un mot de passe puis confirmation", "Mot de Passe Vide", JOptionPane.ERROR_MESSAGE);
        }
        return (check_first_password || check_second_password);
    }
    
    /**
     * Methode : isTheTwoPasswordIdentic (JPasswordField first_password, JPasswordField second_password)
     * return : 
     *   - true : if the two password is identic
     *   - false : if not
     */
    private boolean isTheTwoPasswordIdentic(JPasswordField first_password, JPasswordField second_password){
        
        //System.out.println("call of the methode : isTheTwoPasswordIdentic()");
        boolean validating_state;
        validating_state = (Arrays.equals(first_password.getPassword(), second_password.getPassword()));
        //System.out.println("Compare the two passwords=" + validating_state);
        
        if (validating_state){
            //JOptionPane.showMessageDialog(null, "Welcome !!!\nCliquez sur OK pour fermer", "Bienvenu", JOptionPane.CLOSED_OPTION);
        }
        else{
            JOptionPane.showMessageDialog(null, "Mot de passe incorrect\nCliquez sur OK et saisissez le mot de passe correctement", "Mot de Passe incorrect", JOptionPane.ERROR_MESSAGE);
        }
        //System.out.println("Result of the methode isTheTwoPasswordIdentic (P1, P2)=" + validating_state);
        return validating_state;
    }
}
